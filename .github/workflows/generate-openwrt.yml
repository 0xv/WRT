#=====================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description:   Build OpenWrt with Image Builder
# Instructions:  https://openwrt.org/docs/guide-user/additional-software/imagebuilder
# Download from: https://downloads.openwrt.org/releases
#                https://downloads.immortalwrt.org/releases
#=====================================================================================

name: Build OpenWrt Firmware

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      releases_branch:
        description: "Select the releases branch"
        required: true
        default: "openwrt:24.10.0"
        type: choice
        options:
          - openwrt:24.10.0
          - openwrt:23.05.5
          - immortalwrt:24.10.0-rc4
          - immortalwrt:23.05.4
      devices:
        description: "Select device target"
        required: true
        default: "all"
        type: choice
        options:
          - all
          # Amlogic Devices
          - s905x
          - s905x2
          - s905x3
          - s905x4
          - s912
          # Allwinner H5
          - h5-orangepi-zeroplus2
          - h5-orangepi-zeroplus
          - h5-orangepi-prime
          - h5-orangepi-pc2
          # Allwinner H6
          - h6-orangepi-lite2
          - h6-orangepi-1plus
          - h6-orangepi-3
          - h6-orangepi-3lts
          # Allwinner H616/H618
          - h616-orangepi-zero2
          - h618-orangepi-zero2w
          - h618-orangepi-zero3
          # Rockchip
          - rk3566-orangepi-3b
          - rk3588s-orangepi-5
          # Broadcom
          - bcm2710-rpi-3b
          - bcm2711-rpi-4b
          # x86
          - x86-64
      notify:
        description: "Notify to Telegram"
        required: true
        default: false
        type: boolean

env:
  TZ: Asia/Jakarta
  IMAGEBUILDER_SH: imagebuilder.sh
  DEBIAN_FRONTEND: noninteractive
  PYTHON_PACKAGES: telethon colorama
  APT_PACKAGES: >-
    build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git
    gettext libssl-dev xsltproc rsync wget unzip tar gzip qemu-utils
    mkisofs jq python3 python3-pip
  CURRENT_BRANCH: ${{ github.ref_name }}

jobs:
  prebuild:
    runs-on: ubuntu-latest
    name: ${{ inputs.releases_branch }}
    outputs:
      devices: ${{ steps.matrix.outputs.devices }}
    
    steps:
      - name: Configure Build Matrix
        id: matrix
        run: |
          if [ "${{ inputs.devices }}" = "all" ]; then
            devices='["s905x","s905x2","s905x3","s905x4","s912","h5-orangepi-zeroplus2","h5-orangepi-zeroplus","h5-orangepi-prime","h5-orangepi-pc2","h6-orangepi-lite2","h6-orangepi-1plus","h6-orangepi-3","h6-orangepi-3lts","h616-orangepi-zero2","h618-orangepi-zero2w","h618-orangepi-zero3","rk3566-orangepi-3b","rk3588s-orangepi-5","bcm2710-rpi-3b","bcm2711-rpi-4b","x86-64"]'
          else
            devices="[\"${{ inputs.devices }}\"]"
          fi
          echo "devices=$devices" >> $GITHUB_OUTPUT

  build:
    needs: prebuild
    runs-on: ubuntu-24.04
    if: ${{ github.event.repository.owner.id == github.event.sender.id }}
    name: "${{ matrix.devices }}"
    strategy:
      fail-fast: false
      matrix:
        devices: ${{fromJSON(needs.prebuild.outputs.devices)}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Add changelog info to new release description
        id: changelog
        shell: bash
        run: |
          r=$(awk '/^\*\*Changelog\*\*/ {if(found) exit; found=1} found' ${PWD}/CHANGELOG.md)
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"
          echo "CHANGELOG=$r" >> $GITHUB_OUTPUT

      - name: Install Required Packages
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install ${{ env.APT_PACKAGES }}
          pip install ${{ env.PYTHON_PACKAGES }}

      - name: Initialize Environment
        run: |
          sudo timedatectl set-timezone "$TZ"
          #===============================================================
          DATETIME=$(date +'%Y%m%d')
          echo "DATETIME=${DATETIME}" >> $GITHUB_ENV
          OPENWRT_VERSION=${{ inputs.releases_branch }}
          echo "OPENWRT_VERSION=${OPENWRT_VERSION}" >> $GITHUB_ENV
          OPENWRT_TAG=${OPENWRT_VERSION/:/_}
          echo "OPENWRT_TAG=${OPENWRT_TAG}" >> $GITHUB_ENV
          DEVICE=${{ matrix.devices }}
          echo "DEVICES=${DEVICES}" >> $GITHUB_ENV
          #===============================================================
          echo -e "[\033[94m INFO \033[0m] Building for device: ${{ matrix.devices }}"
          if [ "${{ env.CURRENT_BRANCH }}" == "dev" ]; then
            sed -i "s|const currentBranch = \".*\"|const currentBranch = \"${{ env.CURRENT_BRANCH }}\"|g" files/usr/share/ucode/luci/template/header.ut
            sed -i "s|const currentVersion = \".*\"|const currentVersion = \"${{ env.OPENWRT_TAG }}--dev\"|g" files/usr/share/ucode/luci/template/header.ut
          else
            sed -i "s|const currentBranch = \".*\"|const currentBranch = \"${{ env.CURRENT_BRANCH }}\"|g" files/usr/share/ucode/luci/template/header.ut
            sed -i "s|const currentVersion = \".*\"|const currentVersion = \"${{ env.OPENWRT_TAG }}--main\"|g" files/usr/share/ucode/luci/template/header.ut
          fi

      - name: Build Image and Rootfs
        id: imagebuilder
        continue-on-error: true
        run: |
          echo -e "[\033[95m STEPS \033[0m] Starting firmware and rootfs build"
          chmod +x ${IMAGEBUILDER_SH}
          if sudo bash ${IMAGEBUILDER_SH} ${{ env.OPENWRT_VERSION }} "${{ env.DEVICES }}"; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "date=$(date +'%d-%m-%Y')" >> $GITHUB_OUTPUT
            echo "version=${{ env.OPENWRT_VERSION }}" >> $GITHUB_OUTPUT
            echo "devices=${{ matrix.devices }}" >> $GITHUB_OUTPUT
            echo -e "[\033[92m SUCCESS \033[0m] Build completed successfully"
          else
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "date=$(date +'%d-%m-%Y')" >> $GITHUB_OUTPUT
            echo "version=${{ env.OPENWRT_VERSION }}" >> $GITHUB_OUTPUT
            echo "devices=${{ matrix.devices }}" >> $GITHUB_OUTPUT
            echo -e "[\033[91m ERROR \033[0m] Build failed"
          fi

      - name: Clean Build Space
        if: ${{ steps.imagebuilder.outputs.status == 'success' && !cancelled() }}
        run: |
          cd imagebuilder
          sudo find . -mindepth 1 -not -path './out_firmware*' -delete
          df -hT ${PWD}

      - name: Upload to Release
        if: ${{ steps.imagebuilder.outputs.status == 'success' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: imagebuilder/out_firmware/*
          tag: ${{ env.OPENWRT_TAG }}-${{ env.DATETIME }}
          release_name: RTA-WRT - ${{ env.OPENWRT_TAG }}-${{ env.DATETIME }}
          overwrite: true
          prerelease: ${{ github.ref_name == 'dev' }}
          promote: ${{ github.ref_name != 'dev' }}
          body: |
              ---

              # 🚀 **RTA-WRT - Image Information**
              
              ---
              
              ### 📥 **Download Statistics**
              
              ![GitHub Downloads](https://img.shields.io/github/downloads/rizkikotet-dev/RTA-WRT/${{ env.OPENWRT_TAG }}-${{ env.DATETIME }}/total?style=for-the-badge&logo=Openwrt)
              
              ---
              
              ### 📢 **Telegram Support**
              
              [![Channel](https://img.shields.io/badge/Telegram-Channel-%23059dfa?style=for-the-badge&logo=Telegram&link=https%3A%2F%2Ft.me%2Frtawrt)](https://t.me/rtawrt)
              [![Group](https://img.shields.io/badge/Telegram-Group-%23059dfa?style=for-the-badge&logo=Telegram&link=https%3A%2F%2Ft.me%2Fbackup_rtawrt)](https://t.me/backup_rtawrt)
              [![Personal](https://img.shields.io/badge/Telegram-Personal-%23059dfa?style=for-the-badge&logo=Telegram&link=https%3A%2F%2Ft.me%2FRizkiKotet)](https://t.me/RizkiKotet)
              
              ---
              
              ### 📝 **Changelog**

               ${{ steps.changelog.outputs.CHANGELOG }}
              
              ---
              
              ## ⚠️ Peringatan untuk Instalasi Pertama
              > **Catatan:** Booting awal memerlukan waktu agak lama karena proses partisi ulang dan konfigurasi tambahan.

              ---

              ## 📱 Device yang Didukung

              ### Amlogic
              - **s905x** (HG680P, B860Hv1/v2) | Mod Boot SDCARD
              - **s905x2** (HG680FJ, B860Hv5, MNC CYBORG001, X96Max-4G, X96Max-2G, MECOOL-KM3-4G, Tanix-Tx5-Max, A95X-F2)
              - **s905x3** (X96-Max+, HK1-Box, Vontar-X3, H96-Max-X3, Ugoos-X3, TX3(QZ), TX3(BZ), X96-Air, X96-Max+_A100, A95X-F3-Air, Tencent-Aurora-3Pro(s905x3-b), X96-Max+Q1, X96-Max+100W, X96-Max+_2101, Infinity-B32, Whale, X88-Pro-X3, X99-Max-Plus, Transpeed-X3-Plus)
              - **s905x4** (AKARI AX810, dll)
              - **s912** (Tanix-TX8-Max, Tanix-TX9-Pro(3G), Tanix-TX9-Pro(2G), Tanix-TX92, Nexbox-A1, Nexbox-A95X-A2, A95X, H96-Pro-Plus, VORKE-Z6-Plus, Mecool-M8S-PRO-L, Vontar-X92, T95Z-Plus, Octopus-Planet, Phicomm-T1, TX3-Mini, OneCloudPro-V1.1_V1.2)

              ### Allwinner
              - **H5** (Orange Pi Zero Plus 2, Orange Pi Zero Plus, Orange Pi Prime, Orange Pi PC2)
              - **H6** (Orange Pi 1 Plus, Orange Pi Lite 2, Orange Pi 3 LTS, Orange Pi 3)
              - **H616** (Orange Pi Zero 2)
              - **H618** (Orange Pi Zero 3, Orange Pi Zero 2W)

              ### Rockchip
              - **RK3566** (Orange Pi 3B)
              - **RK3588S** (Orange Pi 5)
              - **RK3588** (Orange Pi 5 Plus)

              ### Broadcom
              - **BCM2710** (Raspberry Pi 3A+/3B/3B+/CM3/Zero2/Zero2W - 64bit)
              - **BCM2711** (Raspberry Pi 4B/400/CM4 - 64bit)

              ### Generic
              - **x86-64**

              ---

              ## ℹ️ Informasi Sistem
              - **IP Default:** 192.168.1.1
              - **Username:** root
              - **Password:** rtawrt
              - **SSID:** RTA-WRT_2g / RTA-WRT_5g

              ### ⭐ Fitur Utama
              - Modemmanager dengan koneksi ulang otomatis
              - OpenClash dengan MetaCubeX Mihomo terbaru
              - Passwall *Tunneling* alternatif
              - MihomoTProxy *Tunneling* alternatif
              - TinyFm file manager
              - Internet Detector dan Lite Watchdog
              - Tema Argon & Material dengan tampilan login kustom
              - 3ginfo lite, Modeminfo, sms-tool, dan aplikasi modem lainnya
              - Dukungan Layar OLED (teruji di Raspberry Pi 4B)

              ---
              
              **🚀 Tetap terhubung, nikmati performa maksimal dengan RTA-WRT! 🚀**
              
              ---

      - name: Upload to Telegram
        if: ${{ inputs.notify == 'true' }}
        uses: Ofceab-Studio/telegram-action@1.0.1
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          thread_id: 36
          format: markdown
          message: |
            ================================
            🚀 **RTA-WRT - Update Firmware**
            *Branch:* `${{ github.ref_name }}`
            ================================
            
            📦 **Versi:** `${{ steps.imagebuilder.outputs.version }}`
            📊 **Status:** `${{ steps.imagebuilder.outputs.status }}`
            📈 **Tanggal:** `${{ steps.imagebuilder.outputs.date }}`
            📱 **Device:** `${{ steps.imagebuilder.outputs.devices }}`
            
            ================================
  
  switch:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: info

      - name: Update Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

          mkdir -p info/${{ env.CURRENT_BRANCH }}

          echo "${{ needs.build.outputs.CHANGELOG }}" >> info/${{ env.CURRENT_BRANCH }}/changelog.txt
          if [ "${{ env.CURRENT_BRANCH }}" == "main" ]; then
            echo "${{ env.OPENWRT_TAG }}--main" >> info/${{ env.CURRENT_BRANCH }}/version.txt
          else
            echo "${{ env.OPENWRT_TAG }}--dev" >> info/${{ env.CURRENT_BRANCH }}/version.txt
          fi
          git add .
          git commit -m "Auto Release: v${{ env.DATETIME }}" || echo "No changes to commit"
          git push origin info || echo "Failed to push changes"