#!/bin/bash
clear
######################################################################
terminal_width=$(stty size | awk '{print $2}')
logorta="
█▀█ ▀█▀ ▄▀█   █░█░█ █▀█ ▀█▀
█▀▄ ░█░ █▀█   ▀▄▀▄▀ █▀▄ ░█░
"
logo(){
  while IFS= read -r line; do
    line_length=${#line}
    padding=$(( (terminal_width - line_length) / 2 ))
    printf "%${padding}s%s\n" "" "$line" | lolcat -g 006786:5bc0de
  done <<< "$logorta"
}

txt(){
  local char="${1:-}"
  while IFS= read -r line; do
    line_length=${#line}
    padding=$(( (terminal_width - line_length) / 2 ))
    printf "%${padding}s%s\n" "" "$line" | lolcat -h 0.1 -v 1 -g ffffff:00ff3b
  done <<< "$char"
}

garis() {
  local char="${1:-=}"
  printf "%${terminal_width}s\n" | tr ' ' "$char" | lolcat -h 0.1 -v 1
}
######################################################################

function print_info() {
  local os=$(grep 'DISTRIB_DESCRIPTION' /etc/openwrt_release | cut -d "'" -f 2 2>/dev/null)
  [ -z "$os" ] && os="null"
  local host=$(cat /proc/device-tree/model 2>/dev/null || echo "$(cat /sys/devices/virtual/dmi/id/board_vendor 2>/dev/null) $(cat /sys/devices/virtual/dmi/id/board_name 2>/dev/null)")
  [ -z "$host" ] && host="null"
  local kernel=$(uname -r 2>/dev/null)
  [ -z "$kernel" ] && kernel="null"
  local uptime=$(awk '{print int($1/86400)" days, "int($1%86400/3600)" hours, "int(($1%3600)/60)" minutes"}' /proc/uptime 2>/dev/null)
  [ -z "$uptime" ] && uptime="null"
  local packages=$(opkg list-installed | wc -l 2>/dev/null)
  [ -z "$packages" ] && packages="null"
  local cpu_model=$(awk -F ': ' '/model name/ { print $2; exit }' /proc/cpuinfo 2>/dev/null)
  [ -z "$cpu_model" ] && cpu_model="null"
  local cpu_temp=$(cat /sys/class/thermal/thermal_zone*/temp 2>/dev/null | awk '{print $1/1000"°C"; exit}')
  [ -z "$cpu_temp" ] && cpu_temp="null"
  local cpu_cores=$(grep -c ^processor /proc/cpuinfo 2>/dev/null)
  [ -z "$cpu_cores" ] && cpu_cores="null"
  local mem_usage=$(free -m | awk '/Mem:/ {print $3}' 2>/dev/null)
  [ -z "$mem_usage" ] && mem_usage="null"
  local mem_total=$(free -m | awk '/Mem:/ {print $2}' 2>/dev/null)
  [ -z "$mem_total" ] && mem_total="null"
  local disk_usage=$(df -h / | awk 'NR==2 {print $3" / "$2" ("$5")"}' 2>/dev/null)
  [ -z "$disk_usage" ] && disk_usage="null"
  local local_ip=$(uci get network.lan.ipaddr 2>/dev/null)
  [ -z "$local_ip" ] && local_ip="null"

  local public_ip_info=$(curl -s https://api.myip.com/ || echo "no_internet")
  
  if [[ "$public_ip_info" == "no_internet" ]]; then
    local public_ip="$local_ip"
    local country="N/A"
    local country_code="N/A"
  else
    local public_ip=$(echo "$public_ip_info" | awk -F'"' '/"ip":/ {print $4}')
    local country=$(echo "$public_ip_info" | awk -F'"' '/"country":/ {print $8}')
    local country_code=$(echo "$public_ip_info" | awk -F'"' '/"cc":/ {print $12}')
  fi

  txt "OS: $os"
  txt "Host: $host"
  txt "Kernel: $kernel"
  txt "Uptime: $uptime"
  txt "Packages: $packages (opkg)"
  txt "CPU: $cpu_model ($cpu_cores cores) @ MHz [$cpu_temp]"
  txt "Memory: ${mem_usage}MiB / ${mem_total}MiB ($(awk "BEGIN {printf \"%.0f\", ($mem_usage/$mem_total*100)}")%)"
  txt "Disk (/): $disk_usage"
  txt "Local IP: $local_ip"
  txt "Public IP: $public_ip"
  txt "Country: $country ($country_code)"
}

######################################################################
## MENU

if [ "$1" == "update" ]; then
echo "Currently checking script updates..." | lolcat
GITHUB_URL="https://github.com/rtaserver/RTA-WRT/raw/main/files/usr/bin/rtawrt"
LOCAL_SCRIPT="/usr/bin/rtawrt"
LOCAL_HASH=$(sha256sum "$LOCAL_SCRIPT" | awk '{ print $1 }')
TEMP_FILE="/tmp/rtawrt"
wget -qO "$TEMP_FILE" "$GITHUB_URL" &>/dev/null
REMOTE_HASH=$(sha256sum "$TEMP_FILE" | awk '{ print $1 }')
clear
if [ "$LOCAL_HASH" != "$REMOTE_HASH" ]; then
  echo "Update local scripts with the latest scripts." | lolcat
  sleep 3
  cp "$LOCAL_SCRIPT" "${LOCAL_SCRIPT}.bak"
  mv "$TEMP_FILE" "$LOCAL_SCRIPT"
  chmod +x "$LOCAL_SCRIPT"
  exec "$LOCAL_SCRIPT"
else
  echo "The script is up to date, no update needed." | lolcat
  sleep 2
fi
rm -f "$TEMP_FILE"
else
garis
logo
txt "Created By RizkiKotet"
garis
print_info
garis
fi
######################################################################
